import { v4 as uuidv4 } from 'uuid';


export const list = [
    { id: uuidv4(), name: 'CSS', definition: 'Cascading Style Sheets, który tłumaczymy na polski jako kaskadowe arkusze stylów. CSS definiuje wygląd elementów HTML. przeglądarki mają wbudowane domyślne style wyglądu poszczególnych elementów, które możemy zastępować dzięki CSS' },
    { id: uuidv4(), name: 'DRY', definition: 'Don’t Repeat Yourself, pol. Nie powtarzaj się) – reguła stosowana podczas wytwarzania oprogramowania, zalecająca unikanie różnego rodzaju powtórzeń wykonywanych przez programistów – na przykład unikanie tych samych czynności podczas kompilowania, unikanie wklejania (lub pisania) tych samych (lub bardzo podobnych) fragmentów kodu w wielu miejscach.' },
    { id: uuidv4(), name: 'Hoisting', definition: 'mechanizm języka JavaScript, który przenosi* deklaracje (zmiennych var i funkcji) na początek zakresu.Obojętnie, czy zakres jest globalny, czy lokalny, to wspomniane elementy są przenoszone na sam jego początek. W przypadku funkcji jest to o tyle korzystne, że ich deklaracje możemy pisać na samym dole naszego kodu.Natomiast na początku kodu zamieszczamy kluczowe działania, takie jak deklaracje zmiennych czy wywoływanie funkcji. To przyśpiesza rozeznanie się w kodzie.Jeśli potrzebujemy szczegółów, to zagłębiamy się w dalszą część kodu' },
    { id: uuidv4(), name: 'Closure', definition: 'domknięcie jest kombinacją funkcji i leksykalnego środowiska, w którym ta funkcja została zadeklarowana. To środowisko zawiera każdą zmienną lokalną która była w zasięgu w momencie kiedy domknięcie zostało stworzone. Innymi słowy oznacza to, że domknięcia dają dostęp funkcjom do zasięgu leksykalnego (zmiennych) wewnątrz tego domknięcia. ' },
    { id: uuidv4(), name: 'Bąbelkowanie i przechwytywanie zdarzeń', definition: 'Bąbelkowanie (bubbling) związane jest ze zjawiskiem propagacji, czyli rozchodzenia się zdarzeń na kolejne elementy drzewa DOM. Propagacja może posiadać 2 fazy - bubbling oraz capturing.Faza bąbelkowania polega na propagacji zdarzeń “w górę”. Korzysta się z tej fazy w celu uruchamiania callbacków, czyli funkcji przekazanych jako drugi parametr innej funkcji. Ta faza jest wykorzystywana domyślnie podczas tworzenia nasłuchiwania (domyślnie false jako trzeci parametr .addEventListener). “Przechwytywanie zdarzeń” polega na propagacji ich w dół.' },
]